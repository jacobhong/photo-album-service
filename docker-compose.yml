version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: production_nginx
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/:/etc/letsencrypt/
    networks:
      - auth-network
    ports:
      - "80:80"
      - "443:443"
  photo-album-service:
    image: 500536527570.dkr.ecr.us-west-1.amazonaws.com/photo-album-service:latest
    env_file:
      - ./docker/photo-album-service.env
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      DATASOURCE_USERNAME: "${DATA_SOURCE_USERNAME}"
      DATASOURCE_PASSWORD: "${DATASOURCE_PASSWORD}"
      DATASOURCE_URL: "${DATASOURCE_URL}"
    ports:
      - "8080:8080"
    networks:
      - auth-network
    volumes:
      - ./docker/images:/tmp/images
  mariadb:
    image: mariadb:10.4
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: pw131
      MYSQL_DATABASE: pas
      MYSQL_USER: user131
      MYSQL_PASSWORD: pw131
    ports:
      - "3303:3306"
    volumes:
      - ./docker/mysql/mysql:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/sql:/docker-entrypoint-initdb.d
    networks:
      - auth-network
  keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: keycloak131
      KEYCLOAK_PASSWORD: password131
      DB_PORT: 3306
      DB_DATABASE: keycloak
      DB_PASSWORD: password131
      DB_USER: keycloak131
      DB_VENDOR: mariadb
      DB_SCHEMA: keycloak
      KEYCLOAK_LOGLEVEL: DEBUG
    volumes:
      - ./docker/keystore/keycloak:/etc/x509/https
    ports:
      #      - "8080:8080"
      - "8081:8080"
      - "8443:8443"
    #    container_name: keycloak.kooriim.com
    networks:
      - auth-network
networks:
  auth-network:
    driver: bridge
